import React, { useEffect, useRef, useState } from 'react';
import { connect } from 'react-redux';
import { Dispatch, bindActionCreators } from 'redux';
import * as BlogActions from '@/redux/actionCreator';
import { Carousel } from 'antd';
import LinesEllipsis from 'react-lines-ellipsis'
interface DataType {
  checked: boolean;
  content: string;
  createTime: string;
  updateTime: string;
  _id: string;
}
interface AfficheData {
  data: []
}
const contentStyle: React.CSSProperties = {
  height: '160px',
  color: '#fff',
  lineHeight: '160px',
  textAlign: 'center',
  background: '#364d79',
};

const Affiche = (props: any) => {
  // 公告列表
  const [list, setList] = useState<DataType[]>([])

  useEffect(() => {
    props.BlogActions.asyncAfficheListAction().then((res: AfficheData) => {
      // 获取友链
      let { data } = res.data as unknown as AfficheData;
      // 筛选已上线数据
      let filterData = data.filter((item: DataType) => item.checked === true)
      setList(filterData);
    });
  }, [props.BlogActions]);
  return (
    <div className='lg:w-full'>
      {/* PC */}
      <div className="block lg:hidden bg-base-100 mb-5 h-auto mx-auto  pb-3 rounded-2xl transition duration-500 ease-in-out transform hover:scale-x-[105%] hover:scale-y-[108%] cursor-pointer " style={{ userSelect: "none" }}>
        <p
          className="flex items-center py-2 pl-2 border border-solid border-gray-300 border-t-0 border-l-0 border-r-0 border-b-1 lg:hidden"
        >
          <svg className="icon w-7 h-7 pr-1" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="14134"><path d="M588.7744 133.12c4.608 0 8.192 2.22208 9.18528 3.33824v751.08352c-0.99328 1.11616-4.57216 3.33824-9.18528 3.33824-3.7376 0-5.8368-1.49504-7.2448-2.79552l-235.60192-217.728-20.59776-19.03616H164.1984V372.67968h161.13152l20.59776-19.03616 235.60192-217.728c1.408-1.30048 3.5072-2.79552 7.2448-2.79552m0-71.68c-19.59424 0-39.57248 6.75328-55.89504 21.83168L297.27744 300.99968h-144.5376c-33.25952 0-60.22144 25.1904-60.22144 56.2688v309.46304c0 31.07328 26.96192 56.2688 60.22144 56.2688h144.5376l235.60192 217.728c16.31744 15.0784 36.30592 21.83168 55.89504 21.83168 41.2928 0 80.86528-29.9776 80.86528-75.17184V136.61184C669.6448 91.4176 630.0672 61.44 588.7744 61.44zM895.6416 537.6h-133.12a35.84 35.84 0 1 1 0-71.68h133.12a35.84 35.84 0 1 1 0 71.68zM906.28096 263.99744l-115.28704 66.56a35.84 35.84 0 1 1-35.84-62.07488l115.28704-66.56a35.84 35.84 0 1 1 35.84 62.07488zM870.44096 796.47744l-115.28704-66.56a35.84 35.84 0 1 1 35.84-62.07488l115.28704 66.56a35.84 35.84 0 1 1-35.84 62.07488z" fill="var(--bgcolor-social-default)" p-id="14135"></path></svg>
          叭叭两句
        </p>
        <Carousel autoplay autoplaySpeed={5000} dotPosition="left" dots={false} className='px-3 h-20 lg:h-10'>
          {
            list.map((item: DataType) => (
              <p className='pt-[5px] h-20 text-base text-[var(--color-font-color)]  overflow-hidden' >
                <LinesEllipsis
                  text={item.content}
                  maxLine="3"
                />
              </p>
            )
            )
          }
        </Carousel>

      </div>
      {/* 移动端 */}
      <div className="hidden lg:block lg:h-24 lg:mx-auto lg:rounded-xl lg:bg-base-100 lg:w-[calc(100%-40px)] sm:w-[335px]">
        <svg className="icon lg:absolute lg:w-8 lg:h-8" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4229"><path d="M0 943.786667h66.56v-100.693334z" fill="#AB4500" p-id="4230"></path><path d="M460.8 0L0 406.186667v537.6L1024 0z" fill="#FF6600" p-id="4231"></path><path d="M157.013333 433.493333l17.066667-15.36-27.306667-30.72 22.186667-20.48 27.306667 30.72 11.946666-10.24 20.48 22.186667-11.946666 10.24L238.933333 443.733333c3.413333-5.12 5.12-8.533333 8.533334-13.653333 8.533333 10.24 15.36 18.773333 20.48 23.893333-3.413333 5.12-5.12 8.533333-8.533334 13.653334l42.666667 47.786666c11.946667 13.653333 11.946667 23.893333 1.706667 35.84-5.12 6.826667-11.946667 11.946667-18.773334 18.773334-6.826667-5.12-15.36-11.946667-25.6-18.773334 3.413333-3.413333 8.533333-6.826667 13.653334-10.24 3.413333-3.413333 3.413333-8.533333-1.706667-13.653333L244.053333 494.933333c-5.12 6.826667-8.533333 15.36-13.653333 22.186667l-23.893333-23.893333c3.413333-6.826667 8.533333-13.653333 15.36-23.893334l-29.013334-32.426666-18.773333 15.36-17.066667-18.773334z m92.16-141.653333c15.36 3.413333 29.013333 6.826667 39.253334 10.24l-6.826667 17.066667 42.666667-37.546667 17.066666 18.773333-34.133333 29.013334 17.066667 18.773333 32.426666-29.013333 15.36 17.066666-32.426666 29.013334 17.066666 18.773333 32.426667-29.013333 15.36 17.066666-32.426667 29.013334 17.066667 18.773333 35.84-30.72 17.066667 18.773333-85.333334 75.093334 10.24 11.946666-22.186666 20.48-83.626667-92.16c0 3.413333 0 5.12 1.706667 8.533334-10.24-5.12-20.48-8.533333-30.72-11.946667-3.413333-34.133333-13.653333-64.853333-25.6-90.453333l27.306666-15.36c5.12 11.946667 8.533333 22.186667 11.946667 35.84l25.6-23.893334-30.72-10.24 8.533333-23.893333zM273.066667 392.533333l27.306666-23.893333-17.066666-18.773333-27.306667 23.893333 17.066667 18.773333z m34.133333 35.84l27.306667-23.893333-17.066667-18.773333L290.133333 409.6l17.066667 18.773333z m32.426667 37.546667l27.306666-23.893333-17.066666-18.773334-27.306667 23.893334 17.066667 18.773333zM436.906667 126.293333l11.946666 13.653334 39.253334-35.84 17.066666 20.48-39.253333 35.84 8.533333 10.24-23.893333 20.48-6.826667-11.946667-42.666666 37.546667 6.826666 8.533333 10.24-6.826667c0 1.706667 1.706667 5.12 1.706667 6.826667L518.826667 136.533333l17.066666 20.48-107.52 98.986667c1.706667 10.24 3.413333 20.48 5.12 32.426667l73.386667 81.92-23.893333 22.186666-49.493334-54.613333c0 10.24-1.706667 22.186667-3.413333 34.133333-10.24-6.826667-20.48-15.36-30.72-22.186666 3.413333-23.893333 3.413333-46.08 1.706667-66.56l-32.426667 29.013333-17.066667-20.48 44.373334-39.253333c0-1.706667-1.706667-5.12-1.706667-6.826667l-6.826667 5.12-10.24-11.946667-40.96 35.84-17.066666-20.48 40.96-35.84-11.946667-11.946666 23.893333-20.48 11.946667 11.946666L426.666667 160.426667l-11.946667-13.653334 22.186667-20.48zM460.8 305.493333l49.493333-44.373333-5.12-6.826667 13.653334-29.013333-63.146667 56.32-17.066667-18.773333 95.573334-85.333334 18.773333 20.48-20.48 42.666667 1.706667 1.706667 40.96-37.546667 17.066666 18.773333-40.96 37.546667 13.653334 15.36c3.413333 5.12 6.826667 8.533333 8.533333 13.653333 1.706667 5.12 1.706667 8.533333 0 13.653334-1.706667 5.12-5.12 10.24-10.24 15.36-5.12 5.12-15.36 13.653333-27.306667 25.6-6.826667-5.12-13.653333-10.24-23.893333-17.066667 8.533333-6.826667 17.066667-13.653333 22.186667-17.066667 5.12-5.12 8.533333-8.533333 8.533333-11.946666 0-3.413333-1.706667-5.12-3.413333-6.826667l-10.24-11.946667-49.493334 44.373334-18.773333-18.773334z" fill="#FFFFFF" p-id="4232"></path></svg>
        <Carousel autoplay autoplaySpeed={5000} dotPosition="left" dots={false} className='lg:px-3'>
          {
            list.map((item: DataType) => (
              <p className='lg:pt-[5px] lg:px-2 lg:h-20 lg:text-base lg:text-[var(--color-font-color)] lg:overflow-hidden' >
                <LinesEllipsis
                  text={item.content}
                  maxLine="3"
                />
              </p>
            )
            )
          }
        </Carousel>
      </div >
    </div >
  );
};

const mapDispatchToProps = (dispatch: Dispatch) => {
  return {
    BlogActions: bindActionCreators(BlogActions, dispatch),
  };
};
export default connect(null, mapDispatchToProps)(Affiche);
